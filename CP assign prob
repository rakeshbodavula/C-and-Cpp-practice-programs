/*
Q:-Generate an array of n integers where n ÃŽ [20, 60]. Write recursive
functions to do the following tasks: (a) the smallest odd number, (b) the largest even
number and (c) the largest prime factor among the factors of all elements in the array.*/

#include<stdio.h>
#include<stdlib.h>
#include<time.h>
int prime(int n){
    int count=0;
    for(int i=2;i<=n/2;i++){
        if(n%i==0 || n==1)
            count++;
    }
    if(count>0) return 0;
    else return 1;
    
}
int smallodd(int arr[],int n,int odd){
    if(n==0) return odd;
    if (arr[n-1]%2!=0 && arr[n-1]<=odd){
        odd=arr[n-1];
    }
    return smallodd(arr,n-1,odd);
}
int largeeven(int arr[],int n,int even){
    if(n==1) return even;
    if(arr[n-1]%2==0 && arr[n-1]>=even){
        even=arr[n-1];
    }
    return largeeven(arr,n-1,even);
}
int largeprimefact(int arr[],int n,int hcf){
    if(n<0) return hcf;
    for(int h=2;h<=arr[n-1];h++){
        if(arr[n-1]%h==0 && prime(h) && h>hcf)
            hcf=h;
    }
    return largeprimefact(arr,n-1,hcf);
}
int main(){
    srand(time(0));
    int n;
    n=(rand()%41)+20;
    printf("the random number is: %d\n",n);
    int arr[n];
    printf("The elements of array are: ");
    for(int i=0;i<n;i++){
        arr[i]=(rand()%100)+1;
        printf("%d ",arr[i]);
    }
    printf("\nThe smallest odd number in the array is: %d",smallodd(arr,n,99));
    printf("\nThe largest even number in the array is: %d",largeeven(arr,n,2));
    printf("\nThe largest prime factor of all elements in the array is: %d\n",largeprimefact(arr,n,2));
    return 0;
}
